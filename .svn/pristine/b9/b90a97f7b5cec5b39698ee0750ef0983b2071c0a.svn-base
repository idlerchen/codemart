package com.fenbi.codemart.servlet;

import java.io.IOException;
import java.util.HashMap;

import javax.servlet.ServletException;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.fenbi.codemart.bean.User;
import com.fenbi.codemart.service.UserService;
import com.fenbi.codemart.service.impl.UserServiceImpl;
import com.fenbi.codemart.utils.WEButils;
import com.google.gson.Gson;

/**
 * 用户相关UserServlet
 * 
 */
public class UserServlet extends BaseServlet {

	private static final long serialVersionUID = 1L;

	/**
	 * 判断将注册的用户名是否可用
	 * 
	 * @param request
	 * @param response
	 * @throws ServletException
	 * @throws IOException
	 */
	public void checkUsername(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		// 接收AJAX发送过来的请求参数username
		String username = request.getParameter("username");

		// 调用Service处理查询用户名是否可用的业务逻辑
		UserService service = new UserServiceImpl();
		boolean flag = service.checkUsername(username);

		// 给浏览器响应数据(true表示不存在，false表示已存在)
		if (flag) {
			response.getWriter().print("1");
		} else {
			response.getWriter().print("0");
		}

	}

	/**
	 * 判断将注册的手机号是否可用
	 * 
	 * @param request
	 * @param response
	 * @throws ServletException
	 * @throws IOException
	 */
	public void checkTelephone(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		// 接收AJAX发送过来的请求参数telephone
		String telephone = request.getParameter("telephone");

		// 调用Service处理查询用户名是否可用的业务逻辑
		UserService service = new UserServiceImpl();
		boolean flag = service.checkTelephone(telephone);

		// 给浏览器响应数据(true表示不存在，false表示已存在)
		if (flag) {
			response.getWriter().print("1");
		} else {
			response.getWriter().print("0");
		}

	}

	/**
	 * 账户注册功能
	 * 
	 * @param request
	 * @param response
	 * @throws IOException
	 * @throws ServletException
	 */
	public void register(HttpServletRequest request, HttpServletResponse response)
			throws IOException, ServletException {
		// 获取register.jsp发送过来的请求参数
		User user = WEButils.param2Bean(request, new User());
		
		// 调用UserService实现类对象的register()方法
		UserService usi = new UserServiceImpl();
		boolean flag = usi.createUser(user);
		// 判断是否注册成功
		if (flag) {
			// 注册成功，请求重定向，跳转至登录页面
			response.sendRedirect(request.getContextPath() + "/page/user/login.jsp");
		} else {
			// 注册失败，请求转发，跳转回注册页面
			request.setAttribute("msg", "注册失败");
			request.getRequestDispatcher("/page/user/register.jsp").forward(request, response);
		}
	}
	
	/**
	 * 账户登录功能
	 * 
	 * @param request
	 * @param response
	 * @throws IOException
	 * @throws ServletException
	 */
	public void login(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {
		// 获取请求参数(用户名/手机号/邮箱，密码)
		String username = request.getParameter("username");
		String password = request.getParameter("password");
		String remember = request.getParameter("remember");

		String phonePattern = "^((1[3,5,8][0-9])|(14[5,7])|(17[0,6,7,8])|(19[7]))\\d{8}$";
		String unamePattern = "([a-z]|[A-Z]|[0-9]|[\\u4e00-\\u9fa5])+";

		// 先判断username是用户名/手机号/邮箱
		// 然后调用UserService实现类对象的对应方法
		UserService usi = new UserServiceImpl();
		User loginUser = null;
		if (username.matches(phonePattern)) {
			loginUser = usi.getUserByTelephoneAndPassword(username, password);
		} else if (username.matches(unamePattern)) {
			loginUser = usi.getUserByUsernameAndPassword(username, password);
		} else {
			loginUser = usi.getUserByEmailAndPassword(username, password);
		}

		// 判断用户名和密码的有效性
		if (loginUser != null) {
			// 创建session，设置loginUser属性
			HttpSession session = request.getSession();
			session.setAttribute("loginUser", loginUser);

			// 若勾选了“记住我”
			if (remember != null) {
				// 创建cookie，保存用户名
				Cookie ucookie = new Cookie("username", loginUser.getUsername());
				Cookie pcookie = new Cookie("password", loginUser.getPassword());
				// 设置有效存活时间
				ucookie.setMaxAge(60 * 60 * 24 * 7);
				pcookie.setMaxAge(60 * 60 * 24 * 7);
				// 设置有效路径
				ucookie.setPath(request.getContextPath() + "/page/user/login.jsp");
				pcookie.setPath(request.getContextPath() + "/page/user/login.jsp");
				// 响应发送至浏览器
				response.addCookie(ucookie);
				response.addCookie(pcookie);
			}

			// 登录成功，请求重定向至首页
			response.sendRedirect(request.getContextPath() + "/index.jsp");
		} else {
			// 登录失败，请求转发至登录页面
			request.setAttribute("msg", "1");
			request.getRequestDispatcher("/page/user/login.jsp").forward(request, response);
		}
	}

	/**
	 * 账户退出功能
	 * 
	 * @param request
	 * @param response
	 * @throws IOException
	 * @throws ServletException
	 */
	public void logout(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {

		// 让session立即失效
		request.getSession().invalidate();

		// 重定向到当前页面
//		String referer = request.getHeader("Referer");
		response.sendRedirect(request.getContextPath() + "/index.jsp");

	}

}
